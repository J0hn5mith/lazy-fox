KEYS = {
	'a': 'qaz',
	's': 'wsx',
	'd': 'edc',
	'f': 'rfvtgb',
	'j': 'yhnujm',
	'k': 'ik,',
	'l': 'ol.',
	';': 'p;/',
}
TYPE_AREA = "#type-area"
PREDICTIONS_LIST = "#predictions-list"
PREDICTION_SERVER_URL = "http://127.0.0.1:8000/api/predict/"
WHITE_SPACE_CODE = 32

var selecting = false;

keyToChar = {
	" ": " "
}

for (key in KEYS) {
	chars = KEYS[key]
	for (i in chars) {
		c = chars[i];
		keyToChar[c] = key
	}
}

function transformTypedCharacter(c) {
	if (keyToChar[c] != undefined) {
		console.log(keyToChar[c]);
		return keyToChar[c]
	} else {
		console.log("Character not supported: " + c);
	}
	return "";
}

function insertTextAtCursor(element, text) {
	//http://stackoverflow.com/questions/3923089/can-i-conditionally-change-the-character-entered-into-an-input-on-keypress
	var sel, range, textNode;
	if (window.getSelection) {
		sel = window.getSelection();
		if (sel.getRangeAt && sel.rangeCount) {
			sel = window.getSelection();
			range = sel.getRangeAt(0).cloneRange();
			sel.removeAllRanges();

			range.setStart(element, textNode.length);
			range.setEnd(element, textNode.length);

			sel.getRangeAt(0).setStart(element, 0);
			sel.getRangeAt(0).setEnd(0);
			sel.addRange(range);
		}
	} else if (document.selection && document.selection.createRange) {
		range = document.selection.createRange();
		range.pasteHTML(text);
	}
}

function updatePredictions(character) {
	removePredictions();
	currentWord = getCurrentWord(character);
	if (currentWord == null) {
		return
	}
	data = '{ "sequence": "' + currentWord + '"}'
	$.ajax({
		url: PREDICTION_SERVER_URL,
		type: 'POST',
		data: data,
		success: function(response) {
			var predictions = response.suggestions;
			addPredictions(predictions);
		}
	});
}

function removePredictions() {
	$(PREDICTIONS_LIST).children().remove();
}

function addPredictions(predictions) {
	for (prediction of predictions) {
		$(PREDICTIONS_LIST).append(
			'<div class="input__suggestions-list-item">' + prediction + "</div>"
		);
	}
}

function getCurrentWord(currentChar) {
	if (currentChar == " ") {
		return null
	}
	var selection = window.getSelection();
	position = selection.anchorOffset
	if (position == 0) {
		return null
	}
	preText = selection.anchorNode.nodeValue.slice(0, selection.anchorOffset)
	tokens = preText.split(" ");
	word = cleanWord(tokens[tokens.length - 1] + currentChar);
	if (currentChar){
		word = word + currentChar;
	}
	return word
}

function cleanWord(word) {
	cleaned = word.replace(/[\n\t]/g, '');
	return cleaned;
}

function selectPrediction() {

}

function highlightPredictions() {
	$(PREDICTIONS_LIST).children().addClass("input__suggestion-list-item--highlighted")
}

window.onload = function() {
	$(TYPE_AREA).keypress(function(evt) {
		if (evt.which) {
			if (selecting) {
				selectPrediction();
			} else {
				if (evt.keyCode == WHITE_SPACE_CODE && getCurrentWord() !=null) {
					highlightPredictions();
					selecting = true
					return false;
				} else {
					var charStr = String.fromCharCode(evt.which);
					var transformedChar = transformTypedCharacter(charStr);
					var range = getCurrentPosition();
					insertWord(transformedChar, range);
					updatePredictions(transformedChar);
					return false;
				}
			}
		}
	});
}

function selectCurrentWord() {
	var range = document.createRange();
	range.selectNodeContents($(TYPE_AREA)[0]);
	var selection = window.getSelection();
	selection.removeAllRanges();
	selection.addRange(range);
}

function replaceCurrentWord(newWord) {
	var selection = window.getSelection();
}

function setCursorPosition(position) {
	var sel, range, typeArea;
	sel = window.getSelection();
	if (sel.getRangeAt != null && sel.rangeCount) {
		range = sel.getRangeAt(0).cloneRange();
		typeArea = $(TYPE_AREA).contents()[0];
		sel.removeAllRanges();

		range.setStart(typeArea, position);
		range.setEnd(typeArea, position);
		sel.addRange(range);

		return range;
	}
}

function getCurrentPosition() {
	var sel, range;
	sel = window.getSelection();
	range = sel.getRangeAt(0).cloneRange();
	return range;
}

function insertWord(word, range) {
	textNode = document.createTextNode(word);
	range.insertNode(textNode);
	textNode.normalize()
	$(TYPE_AREA)[0].normalize();

	var currentPosition = range.endOffset
	setCursorPosition(currentPosition);
}
